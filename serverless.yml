service: trlambda

#resources:
#  Resources:
#    GatewayResponseDefault4XX:
#      Type: 'AWS::ApiGateway::GatewayResponse'
#      Properties:
#        ResponseParameters:
#          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
#        ResponseType: DEFAULT_4XX
#        RestApiId:
#          Ref: 'ApiGatewayRestApi'
#    GatewayResponseDefault5XX:
#      Type: 'AWS::ApiGateway::GatewayResponse'
#      Properties:
#        ResponseParameters:
#          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
#        ResponseType: DEFAULT_5XX
#        RestApiId:
#          Ref: 'ApiGatewayRestApi'
provider:
  name: aws
  tracing: true
  logRetentionInDays: 30
  timeout: 30
  httpApi:
    cors: true

  iamManagedPolicies:
    - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
    - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
    - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess

  runtime: nodejs12.x
  region: ap-southeast-2
  memorySize: 512
  stage: staging
custom:
  stage: ${opt:stage, self:provider.stage}

functions:
  getEC2SecGroups:
    environment:
    timeout: 30
    handler:  lib/getEC2SecGroups.index
    events:
      - http:
          path: /ec2/secgroups
          method: get
